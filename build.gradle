buildscript {
    ext.kotlin_version = '1.3.10'
    ext.ktor_version = '1.0.1'
    ext.jvm_version = '1.8'
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://jcenter.bintray.com" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC6-2'
    id "org.jlleitschuh.gradle.ktlint" version "6.2.1"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.kotlin.jvm'

group = 'com.mantono'
version = '0.1.0'
description = 'Project description'

defaultTasks 'test'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://jitpack.io" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '1.0.1'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.0.1'

    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation 'com.github.spullara.mustache.java:compiler:0.9.5'
    
    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.6.20'
    // Enable for applications
    //runtime 'ch.qos.logback:logback-classic:1.2.3'
    
    // Junit
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.1")
}

test {
	useJUnitPlatform()

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

compileKotlin {
    sourceCompatibility = jvm_version
    kotlinOptions {
        jvmTarget = jvm_version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

wrapper {
    description = 'Generates gradlew[.bat] scripts for faster execution'
    gradleVersion = '5.0'
}
